'use client'

import { useState, useRef, useEffect } from 'react'
import { RefreshCw, Play, AlertCircle } from 'lucide-react'

interface EmbeddedRemixProps {
  code: string
  onChange: (code: string) => void
  onCompile: (result: any) => void
  level: number
}

const EmbeddedRemix: React.FC<EmbeddedRemixProps> = ({ code, onChange, onCompile, level }) => {
  const iframeRef = useRef<HTMLIFrameElement>(null)
  const [isLoaded, setIsLoaded] = useState(false)
  const [loadError, setLoadError] = useState(false)
  const [isClient, setIsClient] = useState(false)

  useEffect(() => {
    setIsClient(true)
  }, [])

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π URL –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  const remixUrl = 'https://remix.ethereum.org/?#theme=dark&version=soljson-v0.8.19+commit.7dd6d404.js&embed=true'

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ iframe
  const handleIframeLoad = () => {
    console.log('Remix iframe –∑–∞–≥—Ä—É–∂–µ–Ω')
    setIsLoaded(true)
    setLoadError(false)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
  const handleIframeError = () => {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Remix')
    setLoadError(true)
  }

  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Remix
  const reloadRemix = () => {
    setIsLoaded(false)
    setLoadError(false)
    if (iframeRef.current) {
      iframeRef.current.src = iframeRef.current.src
    }
  }

  // –°–∏–º—É–ª—è—Ü–∏—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const handleCompileDemo = () => {
    onCompile({ 
      success: true, 
      errors: [], 
      contracts: { 'MyContract': {} }
    })
  }

  if (!isClient) {
    return (
      <div className="w-full h-full bg-slate-900 flex items-center justify-center">
        <div className="text-gray-400">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Remix IDE...</div>
      </div>
    )
  }

  return (
    <div className="relative w-full h-full bg-slate-900 rounded-lg overflow-hidden">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ Remix */}
      <div className="bg-slate-800 px-4 py-2 border-b border-gray-700 flex items-center justify-between">
        <div className="flex items-center gap-2">
          <span className="text-lg">ü¶ä</span>
          <span className="text-white font-medium">Remix IDE</span>
          <span className="px-2 py-1 text-xs bg-orange-500 text-white rounded">
            –£—Ä–æ–≤–µ–Ω—å {level}
          </span>
          {isLoaded && (
            <span className="px-2 py-1 text-xs bg-green-500 text-white rounded">
              ‚úÖ –ì–æ—Ç–æ–≤
            </span>
          )}
        </div>
        
        <div className="flex items-center gap-2">
          {loadError && (
            <button
              onClick={reloadRemix}
              className="flex items-center gap-1 px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-sm rounded transition-colors"
            >
              <RefreshCw className="w-4 h-4" />
              –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
            </button>
          )}
          
          <button
            onClick={handleCompileDemo}
            className="flex items-center gap-1 px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors"
            disabled={!isLoaded}
          >
            <Play className="w-4 h-4" />
            –¢–µ—Å—Ç –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
          </button>
        </div>
      </div>

      {/* Iframe —Å Remix IDE */}
      <div className="relative flex-1" style={{ height: 'calc(100% - 60px)' }}>
        {!isLoaded && !loadError && (
          <div className="absolute inset-0 bg-slate-900/95 flex flex-col items-center justify-center z-10">
            <div className="animate-spin text-4xl mb-4">‚öôÔ∏è</div>
            <div className="text-xl text-gray-300 mb-2">–ó–∞–≥—Ä—É–∂–∞–µ–º Remix IDE</div>
            <div className="text-sm text-gray-500 mb-4">
              –ü–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...
            </div>
            <div className="w-64 h-2 bg-gray-700 rounded-full overflow-hidden">
              <div className="h-full bg-orange-500 rounded-full animate-pulse"></div>
            </div>
          </div>
        )}

        {loadError && (
          <div className="absolute inset-0 bg-slate-900 flex flex-col items-center justify-center z-10">
            <AlertCircle className="w-16 h-16 text-red-400 mb-4" />
            <div className="text-xl text-gray-300 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</div>
            <div className="text-sm text-gray-500 mb-4 text-center">
              –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Remix IDE.<br />
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.
            </div>
            <button
              onClick={reloadRemix}
              className="flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors"
            >
              <RefreshCw className="w-4 h-4" />
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        )}

        <iframe
          ref={iframeRef}
          src={remixUrl}
          className="w-full h-full border-0"
          title="Embedded Remix IDE"
          allow="clipboard-read; clipboard-write; web-share"
          sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-modals allow-top-navigation-by-user-activation"
          loading="eager"
          onLoad={handleIframeLoad}
          onError={handleIframeError}
          style={{
            minHeight: '500px',
            backgroundColor: '#1e293b',
            colorScheme: 'dark'
          }}
        />
      </div>

      {/* –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ */}
      <div className="bg-slate-800 px-4 py-1 border-t border-gray-700 text-xs text-gray-400 flex items-center justify-between">
        <span>
          {isLoaded ? 'Remix IDE –∞–∫—Ç–∏–≤–µ–Ω' : loadError ? '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏' : '–ó–∞–≥—Ä—É–∑–∫–∞...'}
        </span>
        <span>
          {isLoaded ? 'üü¢ –û–Ω–ª–∞–π–Ω' : '‚ö™ –û–∂–∏–¥–∞–Ω–∏–µ'}
        </span>
      </div>
    </div>
  )
}

export default EmbeddedRemix 