'use client'

import { useState, useEffect } from 'react'
import { MessageCircle, X, Lightbulb, AlertCircle } from 'lucide-react'

interface AIAssistantProps {
  currentLevel: number
  code: string
  errors: string[]
  onHintRequest: () => void
}

const AIAssistant: React.FC<AIAssistantProps> = ({ currentLevel, code, errors, onHintRequest }) => {
  const [isOpen, setIsOpen] = useState(false)
  const [message, setMessage] = useState('')
  const [isThinking, setIsThinking] = useState(false)
  const [isClient, setIsClient] = useState(false)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
  useEffect(() => {
    setIsClient(true)
  }, [])

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
  useEffect(() => {
    if (errors.length > 0 && !isOpen) {
      setIsOpen(true)
      generateHelpMessage()
    }
  }, [errors])

  const generateHelpMessage = () => {
    setIsThinking(true)
    
    setTimeout(() => {
      let helpMessage = ''
      
      if (errors.length > 0) {
        helpMessage = getErrorHelp(errors[0])
      } else {
        helpMessage = getLevelHelp(currentLevel, code)
      }
      
      setMessage(helpMessage)
      setIsThinking(false)
    }, 1500)
  }

  const getErrorHelp = (error: string): string => {
    if (error.includes('address') || error.includes('owner')) {
      return "ü¶ä –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∏–∂—É, —É —Ç–µ–±—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π owner. –î–æ–±–∞–≤—å —Å—Ç—Ä–æ–∫—É `address public owner;` –≤ –Ω–∞—á–∞–ª–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞. –≠—Ç–æ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –≤–ª–∞–¥–µ–ª—å—Ü–∞!"
    }
    
    if (error.includes('constructor') || error.includes('–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä')) {
      return "ü¶ä –¢–µ–±–µ –Ω—É–∂–µ–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä! –î–æ–±–∞–≤—å `constructor() { owner = msg.sender; }` - —ç—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ç–µ–±—è –∫–∞–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –ø—Ä–∏ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏–∏."
    }
    
    if (error.includes('payable')) {
      return "ü¶ä –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å payable –¥–ª—è –ø—Ä–∏–µ–º–∞ Ether! –î–æ–±–∞–≤—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ `payable` –∫ —Ñ—É–Ω–∫—Ü–∏–∏ deposit: `function deposit() public payable { ... }`"
    }
    
    if (error.includes('modifier') || error.includes('onlyOwner')) {
      return "ü¶ä –°–æ–∑–¥–∞–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä onlyOwner –¥–ª—è –∑–∞—â–∏—Ç—ã:\n```solidity\nmodifier onlyOwner() {\n    require(msg.sender == owner, \"Only owner\");\n    _;\n}\n```"
    }
    
    if (error.includes('mapping')) {
      return "ü¶ä –ò—Å–ø–æ–ª—å–∑—É–π mapping –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤! –ü–æ–ø—Ä–æ–±—É–π: `mapping(address => mapping(uint256 => bool)) public hasVoted;`"
    }
    
    return `ü¶ä –£–ø—Å! –û—à–∏–±–∫–∞: "${error}". –ü—Ä–æ–≤–µ—Ä—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. –Ø –≤–µ—Ä—é –≤ —Ç–µ–±—è!`
  }

  const getLevelHelp = (level: number, currentCode: string): string => {
    const codeWords = currentCode.toLowerCase()
    
    switch (level) {
      case 1:
        if (!codeWords.includes('contract')) {
          return "ü¶ä –ü—Ä–∏–≤–µ—Ç, –•—Ä–∞–Ω–∏—Ç–µ–ª—å! –ù–∞—á–Ω–∏ —Å —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: `contract Wallet { ... }`. –≠—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤!"
        }
        if (!codeWords.includes('owner')) {
          return "ü¶ä –î–æ–±–∞–≤—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: `address public owner;`. –¢–∞–∫ –º—ã —É–∑–Ω–∞–µ–º, –∫—Ç–æ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ—à–µ–ª—å–∫–æ–º!"
        }
        if (!codeWords.includes('constructor')) {
          return "ü¶ä –ù—É–∂–µ–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏! `constructor() { owner = msg.sender; }` - —Ç–∞–∫ —Ç—ã —Å—Ç–∞–Ω–µ—à—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º."
        }
        return "ü¶ä –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å —Ñ—É–Ω–∫—Ü–∏—é deposit() —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º payable –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞!"
        
      case 2:
        return "ü¶ä –°–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è! –°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É Proposal –∏ mapping –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤. –ü–æ–º–Ω–∏ –ø—Ä–æ –∑–∞—â–∏—Ç—É –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è!"
        
      case 3:
        return "ü¶ä –¢–æ—Ä–≥–æ–≤–∞—è –ø–ª–æ—â–∞–¥–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π struct Item –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ events –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–¥–µ–ª–æ–∫. –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–≤–æ–¥–æ–≤!"
        
      case 4:
        return "ü¶ä DAO - —ç—Ç–æ —Å–ª–æ–∂–Ω–æ! –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–∫–µ–Ω—ã –¥–ª—è –≤–∑–≤–µ—à–µ–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏ block.timestamp –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π."
        
      case 5:
        return "ü¶ä –û–°–¢–û–†–û–ñ–ù–û! –ó–¥–µ—Å—å –µ—Å—Ç—å —É—è–∑–≤–∏–º–æ—Å—Ç—å —Ä–µ–µ–Ω—Ç—Ä–∞–Ω—Å–∏. –û–±–Ω–æ–≤–ª—è–π –±–∞–ª–∞–Ω—Å –î–û –≤–Ω–µ—à–Ω–∏—Ö –≤—ã–∑–æ–≤–æ–≤. –ü–∞—Ç—Ç–µ—Ä–Ω: Checks-Effects-Interactions!"
        
      default:
        return "ü¶ä –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! –¢—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è —Å –∏–∑—É—á–µ–Ω–∏–µ–º Solidity!"
    }
  }

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–æ –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
  if (!isClient) {
    return null
  }

  return (
    <>
      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞ */}
      <div className="fixed bottom-6 right-6 z-50">
        <button
          onClick={() => {
            setIsOpen(!isOpen)
            if (!isOpen && !message) {
              generateHelpMessage()
            }
          }}
          className={`w-16 h-16 rounded-full bg-gradient-to-r from-orange-500 to-red-500 text-white shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center ${
            errors.length > 0 ? 'animate-bounce' : ''
          }`}
        >
          <div className="text-2xl">ü¶ä</div>
          
          {errors.length > 0 && (
            <div className="absolute -top-1 -right-1 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center">
              <AlertCircle className="w-4 h-4 text-white" />
            </div>
          )}
        </button>
      </div>

      {/* –û–∫–Ω–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ */}
      {isOpen && (
        <div className="fixed bottom-24 right-6 w-80 max-h-96 z-50">
          <div className="game-panel p-4 shadow-2xl">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="flex items-center justify-between mb-3">
              <div className="flex items-center space-x-2">
                <div className="text-lg">ü¶ä</div>
                <span className="text-game-text font-semibold">AI –ü–æ–º–æ—â–Ω–∏–∫</span>
              </div>
              <button
                onClick={() => setIsOpen(false)}
                className="p-1 hover:bg-game-border rounded transition-colors"
              >
                <X className="w-4 h-4 text-gray-400" />
              </button>
            </div>

            {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
            <div className="mb-4">
              {isThinking ? (
                <div className="flex items-center space-x-2 text-game-text">
                  <div className="w-4 h-4 border-2 border-game-accent border-t-transparent rounded-full animate-spin" />
                  <span className="text-sm">–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–¥...</span>
                </div>
              ) : (
                <div className="text-sm text-gray-300 leading-relaxed whitespace-pre-line">
                  {message}
                </div>
              )}
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="flex items-center space-x-2">
              <button
                onClick={generateHelpMessage}
                className="flex-1 px-3 py-2 bg-game-accent hover:bg-game-accent/80 text-white text-sm rounded transition-colors flex items-center justify-center space-x-1"
              >
                <Lightbulb className="w-4 h-4" />
                <span>–ü–æ–¥—Å–∫–∞–∑–∫–∞</span>
              </button>
              
              <button
                onClick={onHintRequest}
                className="flex-1 px-3 py-2 bg-green-600 hover:bg-green-500 text-white text-sm rounded transition-colors"
              >
                –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥
              </button>
            </div>

            {/* –°—á–µ—Ç—á–∏–∫ —É—Ä–æ–≤–Ω—è */}
            <div className="mt-3 text-xs text-gray-500 text-center">
              –£—Ä–æ–≤–µ–Ω—å {currentLevel}/5 ‚Ä¢ Smart You AI Assistant
            </div>
          </div>
        </div>
      )}
    </>
  )
}

export default AIAssistant 