import { Level, PathPoint, EnemyType, TowerType, BossConfig, SpecialMechanic, ResourceConfig, EnemyAbility, TowerAbility } from '../types/game'

// üéÆ **–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –£–†–û–í–ù–ï–ô SMART YOU**

export const LEVEL_CONFIGS: Level[] = [
  // üõ°Ô∏è –£–†–û–í–ï–ù–¨ 1: "Wallet in Danger" - –û—Å–Ω–æ–≤—ã –∑–∞—â–∏—Ç—ã
  {
    id: 1,
    title: "–ö–æ—à–µ–ª–µ–∫ –≤ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    description: "–ó–∞—â–∏—Ç–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫ –æ—Ç –±–∞–∑–æ–≤—ã—Ö —Ö–∞–∫–µ—Ä—Å–∫–∏—Ö –∞—Ç–∞–∫. –ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤—ã Solidity.",
    difficulty: 'beginner',
    xpReward: 100,
    badge: "üõ°Ô∏è",
    theme: 'wallet',
    objectives: [
      "–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–π —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç",
      "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏",
      "–ó–∞—â–∏—Ç–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö –∞—Ç–∞–∫",
      "–í—ã–¥–µ—Ä–∂–∞—Ç—å 5 –≤–æ–ª–Ω –≤—Ä–∞–≥–æ–≤"
    ],
    initialCode: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract WalletProtection {
    // –î–æ–±–∞–≤—å—Ç–µ –∫–æ–¥ –¥–ª—è –∑–∞—â–∏—Ç—ã –∫–æ—à–µ–ª—å–∫–∞
}`,
    solution: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract WalletProtection {
    address public owner;
    
    constructor() {
        owner = msg.sender;
    }
    
    modifier onlyOwner() {
        require(msg.sender == owner, "Only owner can call this function");
        _;
    }
    
    function deposit() public payable {
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞
    }
    
    function getBalance() public view onlyOwner returns (uint256) {
        return address(this).balance;
    }
    
    function withdraw(uint256 amount) public onlyOwner {
        require(amount <= address(this).balance, "Insufficient funds");
        payable(owner).transfer(amount);
    }
}`,
    hints: [
      {
        id: "wallet-hint-1",
        condition: "no_constructor",
        title: "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
        content: "–î–æ–±–∞–≤—å—Ç–µ constructor() –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞"
      },
      {
        id: "wallet-hint-2", 
        condition: "no_modifier",
        title: "–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∑–∞—â–∏—Ç—ã",
        content: "–°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä onlyOwner –¥–ª—è –∑–∞—â–∏—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π"
      },
      {
        id: "wallet-hint-3",
        condition: "no_payable",
        title: "Payable —Ñ—É–Ω–∫—Ü–∏–∏",
        content: "–§—É–Ω–∫—Ü–∏—è deposit() –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å payable –¥–ª—è –ø—Ä–∏–µ–º–∞ —ç—Ñ–∏—Ä–∞"
      }
    ],
    validationRules: [
      {
        type: 'contains',
        value: 'address public owner',
        errorMessage: '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é owner —Ç–∏–ø–∞ address'
      },
      {
        type: 'function_exists',
        value: 'constructor',
        errorMessage: '–°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞'
      },
      {
        type: 'modifier_used',
        value: 'onlyOwner',
        errorMessage: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä onlyOwner –¥–ª—è –∑–∞—â–∏—Ç—ã'
      },
      {
        type: 'contains',
        value: 'payable',
        errorMessage: '–§—É–Ω–∫—Ü–∏—è deposit –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å payable'
      }
    ],
    enemyTypes: ['basic_hacker'],
    towerTypes: ['firewall'],
    mapLayout: [
      { x: 50, y: 250 },
      { x: 200, y: 250 },
      { x: 400, y: 250 },
      { x: 600, y: 250 },
      { x: 750, y: 250 }
    ],
    specialMechanics: [
      {
        id: 'basic_defense',
        type: 'resource_management',
        config: { startingGas: 100 }
      }
    ],
    resources: {
      gas: { initial: 100, maxCapacity: 200, regenerationRate: 10 },
      tokens: { initial: 50, maxCapacity: 100, regenerationRate: 5 },
      energy: { initial: 100, maxCapacity: 150, regenerationRate: 15 }
    }
  },

  // üó≥Ô∏è –£–†–û–í–ï–ù–¨ 2: "Electronic Voting" - –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤
  {
    id: 2,
    title: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ",
    description: "–ó–∞—â–∏—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –æ—Ç –ø–æ–¥–¥–µ–ª–∫–∏ –≥–æ–ª–æ—Å–æ–≤. –ò–∑—É—á–∏—Ç–µ mapping –∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã.",
    difficulty: 'beginner',
    xpReward: 200,
    badge: "üó≥Ô∏è", 
    theme: 'voting',
    objectives: [
      "–°–æ–∑–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è",
      "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å mapping –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤",
      "–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞",
      "–í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –≥–æ–ª–æ—Å–∞ —Å –ø–æ–º–æ—â—å—é require",
      "–ó–∞—â–∏—Ç–∏—Ç—å –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"
    ],
    initialCode: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Voting {
    // –°–æ–∑–¥–∞–π—Ç–µ —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
}`,
    solution: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Voting {
    address public owner;
    mapping(address => bool) public hasVoted;
    mapping(uint256 => uint256) public votes;
    
    modifier onlyOwner() {
        require(msg.sender == owner, "Not owner");
        _;
    }
    
    constructor() {
        owner = msg.sender;
    }
    
    function vote(uint256 candidate) public {
        require(!hasVoted[msg.sender], "Already voted");
        require(candidate <= 2, "Invalid candidate");
        
        hasVoted[msg.sender] = true;
        votes[candidate]++;
    }
    
    function getVotes(uint256 candidate) public view returns (uint256) {
        return votes[candidate];
    }
}`,
    hints: [
      {
        id: "voting-hint-1",
        condition: "no_mapping",
        title: "–•—Ä–∞–Ω–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤",
        content: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ mapping(address => bool) –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö"
      },
      {
        id: "voting-hint-2",
        condition: "no_modifier", 
        title: "–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞",
        content: "–î–æ–±–∞–≤—å—Ç–µ modifier onlyOwner –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞"
      }
    ],
    validationRules: [
      {
        type: 'contains',
        value: 'mapping(address => bool)',
        errorMessage: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ mapping –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤'
      },
      {
        type: 'modifier_used',
        value: 'onlyOwner',
        errorMessage: '–î–æ–±–∞–≤—å—Ç–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä onlyOwner'
      },
      {
        type: 'require_statement',
        value: 'require',
        errorMessage: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ require –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏'
      }
    ],
    enemyTypes: ['vote_faker', 'poll_manipulator'],
    towerTypes: ['validator', 'access_controller'],
    mapLayout: [
      { x: 50, y: 150 },
      { x: 200, y: 100 },
      { x: 400, y: 200 },
      { x: 600, y: 100 },
      { x: 750, y: 250 },
      { x: 50, y: 350 },
      { x: 200, y: 400 },
      { x: 400, y: 300 },
      { x: 600, y: 350 },
      { x: 750, y: 250 }
    ],
    specialMechanics: [
      {
        id: 'vote_validation',
        type: 'combo_system',
        config: { 
          combos: [
            { towers: ['validator', 'access_controller'], bonus: 1.5 }
          ]
        }
      }
    ],
    resources: {
      gas: { initial: 150, maxCapacity: 300, regenerationRate: 15 },
      tokens: { initial: 75, maxCapacity: 150, regenerationRate: 8 },
      energy: { initial: 120, maxCapacity: 180, regenerationRate: 20 }
    }
  },

  // üé® –£–†–û–í–ï–ù–¨ 3: "Magic Market" - NFT –∑–∞—â–∏—Ç–∞
  {
    id: 3,
    title: "–í–æ–ª—à–µ–±–Ω—ã–π –º–∞—Ä–∫–µ—Ç",
    description: "–ó–∞—â–∏—Ç–∏—Ç–µ NFT —Ç–æ—Ä–≥–æ–≤—É—é –ø–ª–æ—â–∞–¥–∫—É –æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤. –ò–∑—É—á–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —Å–æ–±—ã—Ç–∏—è.",
    difficulty: 'intermediate',
    xpReward: 300,
    badge: "üé®",
    theme: 'market',
    objectives: [
      "–°–æ–∑–¥–∞—Ç—å NFT –∫–æ–Ω—Ç—Ä–∞–∫—Ç",
      "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å struct –¥–ª—è –¥–∞–Ω–Ω—ã—Ö NFT",
      "–î–æ–±–∞–≤–∏—Ç—å event –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–¥–µ–ª–æ–∫", 
      "–ó–∞—â–∏—Ç–∏—Ç—å –æ—Ç –ø–æ–¥–¥–µ–ª—å–Ω—ã—Ö NFT",
      "–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –∞—É–∫—Ü–∏–æ–Ω–æ–≤"
    ],
    initialCode: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract NFTMarketplace {
    // –°–æ–∑–¥–∞–π—Ç–µ NFT —Ç–æ—Ä–≥–æ–≤—É—é –ø–ª–æ—â–∞–¥–∫—É
}`,
    solution: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract NFTMarketplace {
    struct NFT {
        uint256 id;
        address owner;
        string metadata;
        uint256 price;
        bool forSale;
    }
    
    mapping(uint256 => NFT) public nfts;
    uint256 public nftCounter;
    
    event NFTMinted(uint256 id, address owner);
    event NFTSold(uint256 id, address buyer, uint256 price);
    
    function mintNFT(string memory metadata, uint256 price) public {
        nftCounter++;
        nfts[nftCounter] = NFT(nftCounter, msg.sender, metadata, price, true);
        emit NFTMinted(nftCounter, msg.sender);
    }
    
    function buyNFT(uint256 id) public payable {
        require(nfts[id].forSale, "NFT not for sale");
        require(msg.value >= nfts[id].price, "Insufficient payment");
        
        address seller = nfts[id].owner;
        nfts[id].owner = msg.sender;
        nfts[id].forSale = false;
        
        payable(seller).transfer(msg.value);
        emit NFTSold(id, msg.sender, msg.value);
    }
}`,
    hints: [
      {
        id: "nft-hint-1",
        condition: "no_struct",
        title: "–°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö",
        content: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ struct NFT –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–∫–µ–Ω–∞—Ö"
      },
      {
        id: "nft-hint-2",
        condition: "no_event",
        title: "–°–æ–±—ã—Ç–∏—è",
        content: "–î–æ–±–∞–≤—å—Ç–µ event –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"
      }
    ],
    validationRules: [
      {
        type: 'contains',
        value: 'struct',
        errorMessage: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ struct –¥–ª—è –¥–∞–Ω–Ω—ã—Ö NFT'
      },
      {
        type: 'contains',
        value: 'event',
        errorMessage: '–î–æ–±–∞–≤—å—Ç–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è'
      },
      {
        type: 'function_exists',
        value: 'mintNFT',
        errorMessage: '–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è NFT'
      }
    ],
    enemyTypes: ['nft_thief', 'auction_sniper', 'market_manipulator'],
    towerTypes: ['auditor', 'escrow_guard'],
    mapLayout: [
      { x: 100, y: 225 },
      { x: 200, y: 150 },
      { x: 300, y: 300 },
      { x: 450, y: 100 },
      { x: 550, y: 350 },
      { x: 650, y: 200 },
      { x: 700, y: 225 }
    ],
    specialMechanics: [
      {
        id: 'nft_protection',
        type: 'temporal_effects',
        config: {
          effects: ['freeze', 'burn'],
          durations: [3000, 5000]
        }
      }
    ],
    resources: {
      gas: { initial: 200, maxCapacity: 400, regenerationRate: 20 },
      tokens: { initial: 100, maxCapacity: 200, regenerationRate: 10 },
      energy: { initial: 150, maxCapacity: 220, regenerationRate: 25 }
    }
  },

  // üèõÔ∏è –£–†–û–í–ï–ù–¨ 4: "DAO Council" - –î–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞
  {
    id: 4,
    title: "–°–æ–≤–µ—Ç DAO",
    description: "–ó–∞—â–∏—Ç–∏—Ç–µ DAO –æ—Ç –≤—Ä–∞–∂–¥–µ–±–Ω–æ–≥–æ –∑–∞—Ö–≤–∞—Ç–∞. –ò–∑—É—á–∏—Ç–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.",
    difficulty: 'advanced',
    xpReward: 400,
    badge: "üèõÔ∏è",
    theme: 'dao',
    objectives: [
      "–°–æ–∑–¥–∞—Ç—å DAO –∫–æ–Ω—Ç—Ä–∞–∫—Ç",
      "–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏",
      "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
      "–ó–∞—â–∏—Ç–∏—Ç—å –æ—Ç –≤—Ä–∞–∂–¥–µ–±–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π",
      "–ü–æ–±–µ–¥–∏—Ç—å Malicious Governor"
    ],
    initialCode: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract DAO {
    // –°–æ–∑–¥–∞–π—Ç–µ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
}`,
    solution: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract DAO {
    struct Proposal {
        uint256 id;
        string description;
        uint256 votes;
        uint256 endTime;
        bool executed;
        mapping(address => bool) voted;
    }
    
    mapping(address => uint256) public tokens;
    mapping(uint256 => Proposal) public proposals;
    uint256 public proposalCounter;
    uint256 public totalSupply = 1000000;
    
    event ProposalCreated(uint256 id, string description);
    event VoteCast(uint256 proposalId, address voter, uint256 weight);
    
    function distributeTokens(address to, uint256 amount) public {
        require(tokens[to] + amount <= totalSupply / 10, "Too many tokens");
        tokens[to] += amount;
    }
    
    function createProposal(string memory description) public {
        require(tokens[msg.sender] >= 100, "Need tokens to propose");
        proposalCounter++;
        proposals[proposalCounter].id = proposalCounter;
        proposals[proposalCounter].description = description;
        proposals[proposalCounter].endTime = block.timestamp + 1 days;
        
        emit ProposalCreated(proposalCounter, description);
    }
    
    function vote(uint256 proposalId) public {
        require(!proposals[proposalId].voted[msg.sender], "Already voted");
        require(block.timestamp < proposals[proposalId].endTime, "Voting ended");
        require(tokens[msg.sender] > 0, "No voting power");
        
        proposals[proposalId].voted[msg.sender] = true;
        proposals[proposalId].votes += tokens[msg.sender];
        
        emit VoteCast(proposalId, msg.sender, tokens[msg.sender]);
    }
}`,
    hints: [
      {
        id: "dao-hint-1",
        condition: "no_governance",
        title: "–¢–æ–∫–µ–Ω—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
        content: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ mapping –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"
      },
      {
        id: "dao-hint-2",
        condition: "no_proposals",
        title: "–°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π", 
        content: "–°–æ–∑–¥–∞–π—Ç–µ struct Proposal –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"
      }
    ],
    validationRules: [
      {
        type: 'contains',
        value: 'mapping(address => uint256)',
        errorMessage: '–î–æ–±–∞–≤—å—Ç–µ —Å–∏—Å—Ç–µ–º—É —Ç–æ–∫–µ–Ω–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è'
      },
      {
        type: 'function_exists',
        value: 'vote',
        errorMessage: '–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è'
      },
      {
        type: 'custom',
        value: 'delegation_pattern',
        errorMessage: '–†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–∞—Ç—Ç–µ—Ä–Ω –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è'
      }
    ],
    enemyTypes: ['hostile_proposal', 'vote_buyer', 'coordinated_attack'],
    towerTypes: ['delegate', 'governance_guard'],
    mapLayout: [
      { x: 50, y: 150 }, { x: 150, y: 100 }, { x: 250, y: 200 },
      { x: 400, y: 225 }, // –¶–µ–Ω—Ç—Ä
      { x: 550, y: 150 }, { x: 650, y: 300 }, { x: 750, y: 225 },
      { x: 50, y: 350 }, { x: 150, y: 400 }, { x: 250, y: 300 }
    ],
    specialMechanics: [
      {
        id: 'collective_defense',
        type: 'combo_system',
        config: {
          requiresAll: true,
          globalBonus: 2.0
        }
      }
    ],
    boss: {
      id: 'malicious_governor',
      name: 'Malicious Governor',
      type: 'hostile_proposal',
      health: 1000,
      abilities: [
        {
          id: 'hostile_takeover',
          name: '–í—Ä–∞–∂–¥–µ–±–Ω—ã–π –∑–∞—Ö–≤–∞—Ç',
          description: '–ü—ã—Ç–∞–µ—Ç—Å—è –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ DAO',
          cooldown: 10000,
          effect: 'disable_towers'
        },
        {
          id: 'vote_manipulation',
          name: '–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –≥–æ–ª–æ—Å–∞–º–∏',
          description: '–ü–æ–¥–¥–µ–ª—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è',
          cooldown: 8000,
          effect: 'reverse_votes'
        }
      ],
      defeatedBy: ['governance_pattern', 'delegation_system', 'vote_validation']
    },
    resources: {
      gas: { initial: 300, maxCapacity: 500, regenerationRate: 25 },
      tokens: { initial: 150, maxCapacity: 300, regenerationRate: 15 },
      energy: { initial: 200, maxCapacity: 300, regenerationRate: 30 }
    }
  },

  // ‚ö° –£–†–û–í–ï–ù–¨ 5: "Hacker's Challenge" - –§–∏–Ω–∞–ª—å–Ω–∞—è –±–∏—Ç–≤–∞
  {
    id: 5,
    title: "–í—ã–∑–æ–≤ —Ö–∞–∫–µ—Ä–∞",
    description: "–§–∏–Ω–∞–ª—å–Ω–∞—è –±–∏—Ç–≤–∞ —Å The Black Hat. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å–µ –∑–Ω–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Solidity.",
    difficulty: 'advanced',
    xpReward: 500,
    badge: "‚ö°",
    theme: 'security',
    objectives: [
      "–ó–∞—â–∏—Ç–∏—Ç—å –æ—Ç reentrancy –∞—Ç–∞–∫",
      "–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å circuit breaker",
      "–ó–∞—â–∏—Ç–∏—Ç—å –æ—Ç MEV –∞—Ç–∞–∫",
      "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
      "–ü–æ–±–µ–¥–∏—Ç—å The Black Hat"
    ],
    initialCode: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/security/ReentrancyGuard.sol";

contract SecureVault is ReentrancyGuard {
    // –°–æ–∑–¥–∞–π—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
}`,
    solution: `// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/security/ReentrancyGuard.sol";

contract SecureVault is ReentrancyGuard {
    mapping(address => uint256) public balances;
    bool public emergency = false;
    address public owner;
    uint256 public constant MAX_WITHDRAW = 1 ether;
    
    modifier onlyOwner() {
        require(msg.sender == owner, "Not owner");
        _;
    }
    
    modifier notInEmergency() {
        require(!emergency, "Emergency mode active");
        _;
    }
    
    constructor() {
        owner = msg.sender;
    }
    
    function deposit() public payable notInEmergency {
        balances[msg.sender] += msg.value;
    }
    
    function withdraw(uint256 amount) public nonReentrant notInEmergency {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        require(amount <= MAX_WITHDRAW, "Exceeds max withdraw");
        
        // Checks-Effects-Interactions pattern
        balances[msg.sender] -= amount;
        
        (bool success,) = payable(msg.sender).call{value: amount}("");
        require(success, "Transfer failed");
    }
    
    function emergencyStop() public onlyOwner {
        emergency = true;
    }
    
    function resume() public onlyOwner {
        emergency = false;
    }
}`,
    hints: [
      {
        id: "security-hint-1",
        condition: "reentrancy_vulnerable",
        title: "Reentrancy –∑–∞—â–∏—Ç–∞",
        content: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ReentrancyGuard –∏ Checks-Effects-Interactions"
      },
      {
        id: "security-hint-2",
        condition: "no_circuit_breaker",
        title: "Circuit Breaker",
        content: "–î–æ–±–∞–≤—å—Ç–µ emergency stop –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π"
      }
    ],
    validationRules: [
      {
        type: 'contains',
        value: 'ReentrancyGuard',
        errorMessage: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ReentrancyGuard –¥–ª—è –∑–∞—â–∏—Ç—ã'
      },
      {
        type: 'custom',
        value: 'checks_effects_interactions',
        errorMessage: '–°–ª–µ–¥—É–π—Ç–µ –ø–∞—Ç—Ç–µ—Ä–Ω—É Checks-Effects-Interactions'
      },
      {
        type: 'contains',
        value: 'emergency',
        errorMessage: '–î–æ–±–∞–≤—å—Ç–µ emergency stop –º–µ—Ö–∞–Ω–∏–∑–º'
      }
    ],
    enemyTypes: ['reentrancy_attacker', 'flash_loan_exploiter', 'mev_bot'],
    towerTypes: ['reentrancy_guard', 'circuit_breaker', 'mev_protector'],
    mapLayout: [
      { x: 50, y: 100 }, { x: 120, y: 180 }, { x: 200, y: 120 },
      { x: 300, y: 200 }, { x: 380, y: 100 }, { x: 450, y: 300 },
      { x: 520, y: 150 }, { x: 600, y: 250 }, { x: 680, y: 180 },
      { x: 750, y: 225 }
    ],
    specialMechanics: [
      {
        id: 'advanced_security',
        type: 'interactive_map',
        config: {
          traps: true,
          portals: true,
          healing: true
        }
      }
    ],
    boss: {
      id: 'the_black_hat',
      name: 'The Black Hat',
      type: 'reentrancy_attacker',
      health: 2000,
      abilities: [
        {
          id: 'reentrancy_storm',
          name: 'Reentrancy Storm',
          description: '–ú–∞—Å—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è reentrancy –∞—Ç–∞–∫–∞',
          cooldown: 15000,
          effect: 'massive_reentrancy'
        },
        {
          id: 'flash_loan_devastation',
          name: 'Flash Loan Devastation',
          description: '–û–ø—É—Å—Ç–æ—à–∞—é—â–∞—è flash loan –∞—Ç–∞–∫–∞',
          cooldown: 12000,
          effect: 'flash_loan_attack'
        },
        {
          id: 'mev_manipulation',
          name: 'MEV Manipulation',
          description: '–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –ø–æ—Ä—è–¥–∫–æ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π',
          cooldown: 10000,
          effect: 'mev_front_running'
        }
      ],
      defeatedBy: ['reentrancy_guard', 'circuit_breaker', 'mev_protection', 'perfect_code']
    },
    resources: {
      gas: { initial: 500, maxCapacity: 800, regenerationRate: 35 },
      tokens: { initial: 250, maxCapacity: 400, regenerationRate: 20 },
      energy: { initial: 300, maxCapacity: 450, regenerationRate: 40 }
    }
  }
]

// üéØ **–°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï –í–†–ê–ì–û–í**
type EnemyStats = {
  health: number
  speed: number
  reward: number
  icon: string
  abilities: EnemyAbility[]
}

export const ENEMY_STATS: Record<EnemyType, EnemyStats> = {
  // –£—Ä–æ–≤–µ–Ω—å 1
  basic_hacker: {
    health: 50,
    speed: 30,
    reward: 10,
    icon: "üî¥",
    abilities: []
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 2
  vote_faker: {
    health: 60,
    speed: 25,
    reward: 15,
    icon: "üó≥Ô∏è",
    abilities: [{ id: 'fake_vote', name: '–ü–æ–¥–¥–µ–ª—å–Ω—ã–π –≥–æ–ª–æ—Å', type: 'invisibility', cooldown: 5000 }]
  },
  poll_manipulator: {
    health: 80,
    speed: 35,
    reward: 20,
    icon: "üìä", 
    abilities: [{ id: 'manipulate', name: '–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –æ–ø—Ä–æ—Å–æ–º', type: 'shield', cooldown: 8000 }]
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 3
  nft_thief: {
    health: 70,
    speed: 40,
    reward: 25,
    icon: "üé®",
    abilities: [{ id: 'steal_nft', name: '–ö—Ä–∞–∂–∞ NFT', type: 'teleport', cooldown: 6000 }]
  },
  auction_sniper: {
    health: 90,
    speed: 50,
    reward: 30,
    icon: "üí∞",
    abilities: [{ id: 'snipe_bid', name: '–°–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è —Å—Ç–∞–≤–∫–∞', type: 'clone', cooldown: 10000 }]
  },
  market_manipulator: {
    health: 120,
    speed: 30,
    reward: 35,
    icon: "üè™",
    abilities: [{ id: 'price_manipulation', name: '–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è —Ü–µ–Ω', type: 'shield', cooldown: 12000 }]
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 4
  hostile_proposal: {
    health: 150,
    speed: 25,
    reward: 40,
    icon: "üèõÔ∏è",
    abilities: [{ id: 'hostile_takeover', name: '–í—Ä–∞–∂–¥–µ–±–Ω—ã–π –∑–∞—Ö–≤–∞—Ç', type: 'clone', cooldown: 8000 }]
  },
  vote_buyer: {
    health: 100,
    speed: 45,
    reward: 35,
    icon: "üó≥Ô∏è",
    abilities: [{ id: 'buy_votes', name: '–°–∫—É–ø–∫–∞ –≥–æ–ª–æ—Å–æ–≤', type: 'heal', cooldown: 7000 }]
  },
  coordinated_attack: {
    health: 200,
    speed: 35,
    reward: 50,
    icon: "üë•",
    abilities: [{ id: 'coordinate', name: '–ö–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞—Ç–∞–∫–∞', type: 'clone', cooldown: 15000 }]
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 5
  reentrancy_attacker: {
    health: 180,
    speed: 40,
    reward: 60,
    icon: "üîÑ",
    abilities: [
      { id: 'reentrancy', name: 'Reentrancy –∞—Ç–∞–∫–∞', type: 'teleport', cooldown: 5000 },
      { id: 'recursive_call', name: '–†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤', type: 'clone', cooldown: 8000 }
    ]
  },
  flash_loan_exploiter: {
    health: 250,
    speed: 35,
    reward: 80,
    icon: "üåä",
    abilities: [{ id: 'flash_loan', name: 'Flash Loan —ç–∫—Å–ø–ª–æ–π—Ç', type: 'shield', cooldown: 12000 }]
  },
  mev_bot: {
    health: 220,
    speed: 60,
    reward: 70,
    icon: "üé≠",
    abilities: [
      { id: 'front_run', name: 'Front-running', type: 'teleport', cooldown: 3000 },
      { id: 'sandwich', name: 'Sandwich –∞—Ç–∞–∫–∞', type: 'invisibility', cooldown: 6000 }
    ]
  }
}

// üõ°Ô∏è **–°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï –ë–ê–®–ï–ù**
type TowerStats = {
  damage: number
  range: number
  cost: { gas: number; tokens: number; energy: number }
  icon: string
  abilities: TowerAbility[]
}

export const TOWER_STATS: Record<TowerType, TowerStats> = {
  // –£—Ä–æ–≤–µ–Ω—å 1
  firewall: {
    damage: 15, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 80,
    cost: { gas: 40, tokens: 0, energy: 10 }, // –î–µ—à–µ–≤–∞—è –±–∞–∑–æ–≤–∞—è –±–∞—à–Ω—è
    icon: "üõ°Ô∏è",
    abilities: []
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 2
  validator: {
    damage: 20, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 100,
    cost: { gas: 60, tokens: 25, energy: 15 }, // –£–º–µ—Ä–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞
    icon: "‚úÖ",
    abilities: [{ id: 'validate_signature', name: '–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏', type: 'area_damage', cooldown: 3000 }]
  },
  access_controller: {
    damage: 18, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 70,
    cost: { gas: 50, tokens: 20, energy: 20 }, // –î–µ—à–µ–≤–ª–µ
    icon: "üîê",
    abilities: [{ id: 'block_access', name: '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–æ—Å—Ç—É–ø–∞', type: 'slow_effect', cooldown: 2000 }]
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 3
  auditor: {
    damage: 25, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 120,
    cost: { gas: 80, tokens: 40, energy: 25 }, // –î–æ—Ä–æ–∂–µ, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ
    icon: "üìã",
    abilities: [{ id: 'audit_transaction', name: '–ê—É–¥–∏—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏', type: 'slow_effect', cooldown: 4000 }]
  },
  escrow_guard: {
    damage: 22, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 85,
    cost: { gas: 70, tokens: 50, energy: 30 }, // –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞
    icon: "üèõÔ∏è",
    abilities: [{ id: 'escrow_protection', name: '–ó–∞—â–∏—Ç–∞ —ç—Å–∫—Ä–æ—É', type: 'shield', cooldown: 5000 }]
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 4
  delegate: {
    damage: 28, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 95,
    cost: { gas: 90, tokens: 60, energy: 35 }, // –í—ã—Å–æ–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    icon: "üéØ",
    abilities: [{ id: 'delegate_vote', name: '–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', type: 'combo_boost', cooldown: 6000 }]
  },
  governance_guard: {
    damage: 30, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 110,
    cost: { gas: 100, tokens: 80, energy: 40 }, // –ü—Ä–µ–º–∏—É–º –±–∞—à–Ω—è
    icon: "üèÜ",
    abilities: [{ id: 'protect_governance', name: '–ó–∞—â–∏—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', type: 'heal_allies', cooldown: 7000 }]
  },
  
  // –£—Ä–æ–≤–µ–Ω—å 5
  reentrancy_guard: {
    damage: 35, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 120,
    cost: { gas: 120, tokens: 100, energy: 50 }, // –î–æ—Ä–æ–≥–∞—è, –Ω–æ –º–æ—â–Ω–∞—è
    icon: "üîí",
    abilities: [{ id: 'prevent_reentrancy', name: '–ó–∞—â–∏—Ç–∞ –æ—Ç Reentrancy', type: 'area_damage', cooldown: 5000 }]
  },
  circuit_breaker: {
    damage: 22, // –£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–Ω –¥–ª—è –Ω–∞–±–ª—é–¥–∞–µ–º—ã—Ö –±–æ–µ–≤
    range: 100,
    cost: { gas: 110, tokens: 90, energy: 45 }, // –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è
    icon: "üõ°Ô∏è",
    abilities: [{ id: 'emergency_stop', name: '–ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞', type: 'slow_effect', cooldown: 8000 }]
  },
  mev_protector: {
    damage: 40, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–Ω –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    range: 90,
    cost: { gas: 150, tokens: 120, energy: 60 }, // –î–æ—Ä–æ–≥–∞—è, –Ω–æ –æ–ø—Ä–∞–≤–¥–∞–Ω–Ω–æ
    icon: "‚ö°",
    abilities: [{ id: 'prevent_mev', name: '–ó–∞—â–∏—Ç–∞ –æ—Ç MEV', type: 'combo_boost', cooldown: 4000 }]
  }
}

export default LEVEL_CONFIGS 